[["1-latex-with-tikz-2d.html", "Chapter 1 LaTeX with Tikz (2D) ", " Chapter 1 LaTeX with Tikz (2D) "],["1-1-plots.html", "1.1 Plots", " 1.1 Plots 1.1.1 \\draw and \\node Required package(s): \\usepackage{tikz}. The \\draw function can handle parametric plot. The common options are variable=: the parameter. domain=: the domain of the parameter. samples=: the length of a eqidistance sequence that spans the domain. thick or ultra thick: the thickness of a curve. color=: the color of the curve. fill=: the color to fill the region enclosed by the curve. -&gt; or -&gt;&gt;: add an arrow or double arrow at the end of the curve. The \\node function adds a label to the graph. anchor=: the place of the anchor relative to the label. Accepted key words are east, west, north, south, or any combination of the four. sin(\\t r): \\t is a parameter and r indicates \\t is measured in radians. \\definecolor{cool}{HTML}{6E7696} % Define a color named cool \\begin{figure}[htbp] \\begin{tikzpicture}[scale = 1] % Draw and fill a circle \\draw [variable=\\t, domain=0:2*pi, samples=200, ultra thick, color = black!70, fill = cool] plot({cos(\\t r)}, {sin(\\t r)}); % Add arrows to the circle \\draw [variable=\\t, domain=0:pi/3, samples=200, ultra thick, color = black!70, -&gt;&gt;] plot({cos(\\t r)}, {sin(\\t r)}); \\draw [-&gt;] (-2, 0) -- (2, 0); % Add the x-axis \\draw [-&gt;] (0, -2.2) -- (0, 2.2); % Add the y-axis \\draw (1,4pt) -- (1,0pt); % Draw tickmark \\node [anchor=north west] at (1, 0) {$1$}; % Add tickmark label \\end{tikzpicture} \\end{figure} The \\draw command allows multiple parametric curves and points to be joined head to tail. In the next example, the curve starts at the point (1, 0), goes counterclockwise around a unit circle for 180 degrees, then moves clockwise along a smaller circle for another 180 degrees before finally returns to the point (1, 0). The enclosed region is filled by a user-defined color named “cool”. \\definecolor{cool}{HTML}{6E7696} % Define a color named cool \\begin{figure}[htbp] \\begin{tikzpicture}[scale = 1] \\draw [fill=cool] (1,0) -- plot[domain=0:pi, variable=\\t] ({cos(\\t r)}, {sin(\\t r)}) -- plot[domain=pi:0, variable=\\t] ({0.3*cos(\\t r)}, {0.3*sin(\\t r)}) -- cycle; \\end{tikzpicture} \\end{figure} 1.1.2 \\tikzfillbetween Required package(s): \\usepackage{tikz, pgfplots}, \\usepgfplotslibrary{fillbetween}. A convenient way to shade an area between two curves is to use the \\tikzfillbetween command from the pgfplots library. name path=A: Name the first curve as A. name path=B: Name the second curve as B. \\definecolor{cool}{HTML}{6E7696} % Define a color named cool \\begin{figure}[htbp] \\begin{tikzpicture}[scale = 1] \\draw [-&gt;] (-1, 0) -- (3, 0); % x-axis \\draw [-&gt;] (0, -0.5) -- (0, 4.5); % y-axis \\draw [name path=A, variable=\\t, domain=0:2, samples=200, thick] plot({\\t}, {sqrt(\\t)}); \\draw [name path=B, variable=\\t, domain=0:2, samples=200, thick] plot({\\t}, {\\t^2}); \\tikzfillbetween[of=A and B]{cool}; % Fills the space between A and B. \\end{tikzpicture} \\end{figure} "]]
